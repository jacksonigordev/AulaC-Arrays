using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Colecao
{
    internal class Program
    {
        static void Main(string[] args)
        {
            #region Vetor Array Unidimensional
            //int numero = 10;

            //int[] numeros = new int[5];

            //numeros[0] = 10;
            //numeros[1] = 20;
            //numeros[2] = 30;
            //numeros[3] = 40;
            //numeros[4] = 50;

            //numeros[2] = 55;

            //string nome = "Jackson";

            //string[] nomes = new string[3];

            //nomes[0] = "Algusto";
            //nomes[1] = "Igor";
            //nomes[2] = "Pedro";

            ////Outra maneira de declarar um array, apenas abrindo e fechando chaves.

            //string[] amigos = 
            //    {"Miguel",
            //    "Guto",
            //    "Gideão" };

            //amigos[0] = "Gente Fina!";
            //amigos[1] = "Chato";
            //amigos[2] = "Biblico";

            //Console.WriteLine(amigos[2]);
            //Console.WriteLine(amigos[1]);
            //Console.WriteLine(amigos[0]);

            ////O código sempre vai ser chamado e escrito confome você
            ////vai chamando nos Console.WriteLine.
            //Console.WriteLine(nomes[2]);
            //Console.WriteLine(nomes[1]);
            //Console.WriteLine(nomes[0]);
            //Console.WriteLine(numeros[1]);
            //Console.WriteLine(numeros[2]);
            //Console.WriteLine(numeros[3]);
            //Console.ReadKey();

            #endregion

            #region Vetor Matriz Array Bidimencional

            ////temos aqui um array bidimencional que você pode fazer colunas e linhas-
            ////se conversarem. por semplo [2, 1] "Linha 2 e Coluna 1"
            //int[,] numeros = new int[2, 3];

            ////abaixo vemos a linha "numeros[0," o valor da esquerda é linha.
            //numeros[0, 0] = 10;
            //numeros[0, 1] = 20;
            //numeros[0, 2] = 30;

            ////abaixo vemos a coluna "numeros...,0]" o valor da direita é coluna.
            //numeros[1, 0] = 20;
            //numeros[1, 1] = 30;
            //numeros[1, 2] = 40;

            ////Se uma matriz é linha 3 e coluna 3 o numero 0 conta como se fosse 1-
            ////dito isso a coluna não vai até 3 e sim até 0,1,2 que somando ficam-
            ////3 digitos e como a coluna é até 3, casa certinho os 3 digitos da coluna.

            //Console.WriteLine(numeros[1, 2]);
            //Console.ReadKey();

            #endregion


        }
    }
}
